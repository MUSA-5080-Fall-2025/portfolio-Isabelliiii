{
  "hash": "42aed590ab7ea4c9cdbac9cda5021904",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 2: Spatial Analysis and Visualization\"\nsubtitle: \"Healthcare Access and Equity in Pennsylvania\"\nauthor: \"Isabelle Li\"\ndate: today\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\n    embed-resources: true\nexecute:\n  warning: false\n  message: false\n---\n\n## Assignment Overview\n\n**Learning Objectives:**\n- Apply spatial operations to answer policy-relevant research questions\n- Integrate census demographic data with spatial analysis\n- Create publication-quality visualizations and maps\n- Work with spatial data from multiple sources\n- Communicate findings effectively for policy audiences\n\n---\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?**\n\nYour analysis should identify counties that should be priorities for healthcare investment and policy intervention.\n\n### Required Analysis Steps\n\nComplete the following analysis, documenting each step with code and brief explanations:\n\n#### Step 1: Data Collection (5 points)\n\nLoad the required spatial data:\n- Pennsylvania county boundaries\n- Pennsylvania hospitals (from lecture data)\n- Pennsylvania census tracts\n\n**Your Task:**\n\n\n**Questions to answer:**\n- How many hospitals are in your dataset?\n[223 hospitals]\n- How many census tracts?\n[17 districts]\n- What coordinate reference system is each dataset in?\n[Counties: WGS 84 / Pseudo-Mercator (EPSG 3857)\nDistricts & Hospitals: WGS 84 (EPSG 4326)]\n---\n\n#### Step 2: Get Demographic Data \n\nUse `tidycensus` to download tract-level demographic data for Pennsylvania.\n\n**Required variables:**\n- Total population\n- Median household income\n- Population 65 years and over (you may need to sum multiple age categories)\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get demographic data from ACS\n\nSys.getenv(\"CENSUS_API_KEY\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"\"\n```\n\n\n:::\n\n```{.r .cell-code}\nbasic_vars <- c(total_pop = \"B01003_001\", medhhinc = \"B19013_001\")\n\nacs_basic <- get_acs(\n  geography = \"tract\",\n  state     = \"PA\",\n  survey    = \"acs5\",\n  year      = 2023,      \n  variables = basic_vars,\n  geometry  = FALSE,\n  output    = \"wide\"\n)%>%\n  transmute(\n    GEOID,\n    total_pop = total_popE,\n    medhhinc  = medhhincE\n  )\n\nage65_vars <- c(\n  \"B01001_020\",\"B01001_021\",\"B01001_022\",\"B01001_023\",\"B01001_024\",\"B01001_025\",\n  \"B01001_044\",\"B01001_045\",\"B01001_046\",\"B01001_047\",\"B01001_048\",\"B01001_049\"\n)\n\nacs_65 <- get_acs(\n  geography = \"tract\",\n  state     = \"PA\",\n  survey    = \"acs5\",\n  year      = 2023,\n  variables = age65_vars,\n  geometry  = FALSE\n) %>%\n  group_by(GEOID) %>%\n  summarise(pop65 = sum(estimate, na.rm = TRUE), .groups = \"drop\")\n\nacs_tract <- acs_basic %>%\n  left_join(acs_65, by = \"GEOID\")\n\nhead(acs_tract)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  GEOID       total_pop medhhinc pop65\n  <chr>           <dbl>    <dbl> <dbl>\n1 42001030101      2666    82716   577\n2 42001030103      2414   111227   570\n3 42001030104      3417    66848   858\n4 42001030200      5379    72431  1070\n5 42001030300      4390    84643   782\n6 42001030400      5557    97694  1231\n```\n\n\n:::\n\n```{.r .cell-code}\n# Join to tract boundaries\ntracts_pa <- tracts(state = \"PA\", year = 2023, cb = TRUE, class = \"sf\")\n\ntracts_demog <- tracts_pa %>%\n  left_join(acs_tract, by = \"GEOID\")\n\nnames(tracts_demog)           \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"STATEFP\"    \"COUNTYFP\"   \"TRACTCE\"    \"GEOIDFQ\"    \"GEOID\"     \n [6] \"NAME\"       \"NAMELSAD\"   \"STUSPS\"     \"NAMELSADCO\" \"STATE_NAME\"\n[11] \"LSAD\"       \"ALAND\"      \"AWATER\"     \"total_pop\"  \"medhhinc\"  \n[16] \"pop65\"      \"geometry\"  \n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(tracts_demog)            \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3445\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(tracts_demog$pop65)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    0.0   429.0   665.0   718.8   945.0  2541.0 \n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n- What year of ACS data are you using?\n[I'm using the 2019–2023 5-year ACS data]\n- How many tracts have missing income data?\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(tracts_demog$medhhinc))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 65\n```\n\n\n:::\n:::\n\n\n- What is the median income across all PA census tracts?\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(tracts_demog$medhhinc, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 72943.5\n```\n\n\n:::\n:::\n\n\n---\n\n#### Step 3: Define Vulnerable Populations \n\nIdentify census tracts with vulnerable populations based on TWO criteria:\n1. Low median household income (choose an appropriate threshold)\n2. Significant elderly population (choose an appropriate threshold)\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for vulnerable tracts based on your criteria\ntracts_demog <- tracts_demog %>%\n  mutate(\n    pct65 = 100 * pop65 / total_pop\n  )\n\nincome_threshold <- median(tracts_demog$medhhinc, na.rm = TRUE)\nelderly_threshold <- quantile(tracts_demog$pct65, 0.75, na.rm = TRUE)\n\nincome_threshold\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 72943.5\n```\n\n\n:::\n\n```{.r .cell-code}\nelderly_threshold\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    75% \n23.5149 \n```\n\n\n:::\n\n```{.r .cell-code}\nvulnerable_tracts <- tracts_demog %>%\n  filter(\n    medhhinc < income_threshold,\n    pct65 > elderly_threshold\n  )\n\nnrow(vulnerable_tracts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 422\n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n- What income threshold did you choose and why?\n[We defined low-income tracts as those with a median household income below $72,943.5, which is the statewide median income across all Pennsylvania census tracts.\nThis threshold was chosen because the median reflects the central tendency of income distribution and aligns with a relative, within-state definition of economic disadvantage.]\n- What elderly population threshold did you choose and why?\n[We defined elderly-heavy tracts as those with more than 23.5% of residents aged 65 and older, corresponding to the 75th percentile of the elderly population distribution.\nThis threshold identifies tracts where the elderly population is significantly higher than typical statewide levels, focusing attention on areas with concentrated aging populations.]\n- How many tracts meet your vulnerability criteria?\n[422 tracts meet both criteria (low income and high elderly population).]\n- What percentage of PA census tracts are considered vulnerable by your definition?\n[Out of 3,445 tracts statewide, about 12.2% (422 / 3,445 × 100) are classified as vulnerable under our definition.]\n---\n\n#### Step 4: Calculate Distance to Hospitals \n\nFor each vulnerable tract, calculate the distance to the nearest hospital.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform to appropriate projected CRS\n\ntarget_crs <- 5070\n\nvulnerable_p <- st_transform(vulnerable_tracts, target_crs)\nhospitals_p  <- st_transform(hospitals,        target_crs)\n\nvul_centroids <- st_centroid(vulnerable_p)\n\nnearest_idx <- st_nearest_feature(vul_centroids, hospitals_p)\nnearest_dist_m <- st_distance(vul_centroids, hospitals_p[nearest_idx, ], by_element = TRUE)\n\ndist_miles <- set_units(nearest_dist_m, \"mi\")\ndist_miles_num <- as.numeric(dist_miles)\n\n# Calculate distance from each tract centroid to nearest hospital\n\nvulnerable_with_dist <- vulnerable_p %>%\n  mutate(\n    nearest_hosp_id = nearest_idx,\n    dist_miles = dist_miles_num\n  )\n\nsummary(vulnerable_with_dist$dist_km)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLength  Class   Mode \n     0   NULL   NULL \n```\n\n\n:::\n\n```{.r .cell-code}\nn_far_over_15mi <- sum(vulnerable_with_dist$dist_miles > 15, na.rm = TRUE)\n\ntop_farthest <- vulnerable_with_dist %>%\n  arrange(desc(dist_miles)) %>%\n  dplyr::select(GEOID, total_pop, medhhinc, pct65, dist_miles) %>%\n  head(10)\n\ncat(\"\\nVulnerable tracts:\", nrow(vulnerable_with_dist),\n    \"\\nNumber > 15 miles from nearest hospital:\", n_far_over_15mi, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nVulnerable tracts: 422 \nNumber > 15 miles from nearest hospital: 25 \n```\n\n\n:::\n\n```{.r .cell-code}\ntop_farthest\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 10 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 1427375 ymin: 2043196 xmax: 1754030 ymax: 2243700\nProjected CRS: NAD83 / Conus Albers\n         GEOID total_pop medhhinc    pct65 dist_miles\n1  42103950104      2805    66576 32.08556   28.98276\n2  42113960102      2005    59100 25.98504   27.76385\n3  42033330700      2103    55969 23.58535   25.64808\n4  42097082300      4953    72733 23.64224   20.13255\n5  42083420800      3682    72564 24.38892   20.10985\n6  42113960201      1672    66379 31.81818   19.96396\n7  42043025300      4009    57260 27.16388   19.31860\n8  42023960200      2470    58633 33.03644   19.31279\n9  42119090201      1898    67546 25.50053   18.84035\n10 42061951200      4531    59528 26.04282   18.67494\n                         geometry\n1  MULTIPOLYGON (((1744270 224...\n2  MULTIPOLYGON (((1604264 222...\n3  MULTIPOLYGON (((1456442 214...\n4  MULTIPOLYGON (((1587383 211...\n5  MULTIPOLYGON (((1427375 222...\n6  MULTIPOLYGON (((1576880 222...\n7  MULTIPOLYGON (((1585131 210...\n8  MULTIPOLYGON (((1447968 219...\n9  MULTIPOLYGON (((1548439 213...\n10 MULTIPOLYGON (((1504805 204...\n```\n\n\n:::\n:::\n\n\n**Requirements:**\n- Use an appropriate projected coordinate system for Pennsylvania\n- Calculate distances in miles\n- Explain why you chose your projection\n\n**Questions to answer:**\n- What is the average distance to the nearest hospital for vulnerable tracts?\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(vulnerable_with_dist$dist_miles, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.858657\n```\n\n\n:::\n:::\n\n\n- What is the maximum distance?\n[28.98]\n- How many vulnerable tracts are more than 15 miles from the nearest hospital?\n[25 Tracts]\n\n---\n\n#### Step 5: Identify Underserved Areas \n\nDefine \"underserved\" as vulnerable tracts that are more than 15 miles from the nearest hospital.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create underserved variable\n\nvulnerable_with_dist <- vulnerable_with_dist %>%\n  mutate(\n    underserved = ifelse(dist_miles > 15, TRUE, FALSE)\n  )\n\nn_underserved <- sum(vulnerable_with_dist$underserved, na.rm = TRUE)\npct_underserved <- round(n_underserved / nrow(vulnerable_with_dist) * 100, 1)\n\ncat(\"Underserved tracts:\", n_underserved,\n    \"out of\", nrow(vulnerable_with_dist),\n    \"(\", pct_underserved, \"% )\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUnderserved tracts: 25 out of 422 ( 5.9 % )\n```\n\n\n:::\n\n```{.r .cell-code}\nunderserved_tracts <- vulnerable_with_dist %>%\n  filter(underserved == TRUE)\n\nunderserved_by_county <- underserved_tracts %>%\n  mutate(county_fips = substr(GEOID, 1, 5)) %>%\n  group_by(county_fips) %>%\n  summarise(n_underserved = n())\n\nhead(underserved_by_county)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 2 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 1272296 ymin: 2103929 xmax: 1615649 ymax: 2259518\nProjected CRS: NAD83 / Conus Albers\n# A tibble: 6 × 3\n  county_fips n_underserved                                             geometry\n  <chr>               <int>                                       <GEOMETRY [m]>\n1 42015                   1 MULTIPOLYGON (((1595449 2251631, 1595948 2252177, 1…\n2 42023                   2 POLYGON ((1447377 2194151, 1447520 2194167, 1447250…\n3 42033                   3 MULTIPOLYGON (((1427629 2125464, 1427205 2127780, 1…\n4 42039                   1 MULTIPOLYGON (((1273860 2178170, 1273325 2181453, 1…\n5 42043                   1 MULTIPOLYGON (((1585131 2109648, 1585226 2110182, 1…\n6 42053                   1 MULTIPOLYGON (((1359123 2169199, 1359918 2169341, 1…\n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n- How many tracts are underserved?\n[25 Tracts]\n- What percentage of vulnerable tracts are underserved?\n[5.9%]\n- Does this surprise you? Why or why not?\n[No — because healthcare facilities are concentrated in urban regions, while the underserved tracts are primarily rural and sparsely populated, though small in number, they represent significant accessibility challenges.]\n---\n\n#### Step 6: Aggregate to County Level\n\nUse spatial joins and aggregation to calculate county-level statistics about vulnerable populations and hospital access.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spatial join tracts to counties\n\nvulnerable_with_dist <- vulnerable_with_dist %>% mutate(vulnerable = TRUE)\n\ncounty_stats <- vulnerable_with_dist %>%\n  st_drop_geometry() %>%\n  mutate(county_fips5 = substr(GEOID, 1, 5)) %>%\n  group_by(county_fips5) %>%\n  summarise(\n    n_vulnerable     = n(),                           \n    n_underserved    = sum(underserved, na.rm = TRUE),\n    pct_underserved  = 100 * n_underserved / n_vulnerable,  \n    mean_dist_miles  = mean(dist_miles, na.rm = TRUE),\n    vuln_pop_65      = sum(pop65, na.rm = TRUE),      \n    .groups = \"drop\"\n  )\n\ncounties_keyed <- counties %>%\n  mutate(\n    FIPS_COUNT = as.character(FIPS_COUNT),\n    county_fips5 = paste0(\"42\", str_pad(FIPS_COUNT, width = 3, side = \"left\", pad = \"0\"))\n  )\n\ncounties_summary <- counties_keyed %>%\n  left_join(county_stats, by = \"county_fips5\")\n\nout_tbl <- counties_summary %>%\n  st_drop_geometry() %>%\n  dplyr::select(COUNTY_NAM, county_fips5, n_vulnerable, n_underserved,\n         pct_underserved, mean_dist_miles, vuln_pop_65) %>%\n  arrange(desc(n_underserved), desc(pct_underserved))\n\nhead(out_tbl, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   COUNTY_NAM county_fips5 n_vulnerable n_underserved pct_underserved\n1    SULLIVAN        42113            3             3       100.00000\n2  CLEARFIELD        42033            4             3        75.00000\n3        PIKE        42103            5             3        60.00000\n4     CAMERON        42023            2             2       100.00000\n5  HUNTINGDON        42061            6             2        33.33333\n6      FOREST        42053            1             1       100.00000\n7    BRADFORD        42015            2             1        50.00000\n8       UNION        42119            3             1        33.33333\n9     DAUPHIN        42043            3             1        33.33333\n10     MONROE        42089            3             1        33.33333\n   mean_dist_miles vuln_pop_65\n1        21.532867        1379\n2        14.670008        3384\n3        17.830823        2815\n4        18.934088        1320\n5        13.493329        4185\n6        18.040637         838\n7        14.023367        2413\n8         7.997835        3565\n9        10.668150        3181\n10        6.976864        2532\n```\n\n\n:::\n:::\n\n\n**Required county-level statistics:**\n- Number of vulnerable tracts\n- Number of underserved tracts  \n- Percentage of vulnerable tracts that are underserved\n- Average distance to nearest hospital for vulnerable tracts\n- Total vulnerable population\n\n**Questions to answer:**\n- Which 5 counties have the highest percentage of underserved vulnerable tracts?\n[Sullivan County, Cameron County, Forest County, Clearfield County, Pike County]\n- Which counties have the most vulnerable people living far from hospitals?\n[Huntingdon County, Union County, Dauphin County, Clearfield County, Pike County]\n- Are there any patterns in where underserved counties are located?\n[Yes. Underserved counties are clustered in rural and mountainous regions of northern and western Pennsylvania, such as Sullivan, Cameron, Forest, and Clearfield Counties.\nThese areas tend to have low population density and aging populations but few medical facilities, reflecting a classic rural accessibility gap. In contrast, eastern metropolitan counties around Philadelphia and the Harrisburg corridor have dense hospital networks and shorter average distances to care.]\n---\n\n#### Step 7: Create Summary Table \n\nCreate a professional table showing the top 10 priority counties for healthcare investment.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create and format priority counties table\n\npriority_table <- counties_summary %>%\n  sf::st_drop_geometry() %>%\n  dplyr::select(\n    COUNTY_NAM, county_fips5, n_vulnerable, n_underserved,\n    pct_underserved, mean_dist_miles, vuln_pop_65\n  ) %>%\n  dplyr::mutate(\n    priority_score = vuln_pop_65 * (pct_underserved / 100)\n  ) %>%\n  dplyr::arrange(dplyr::desc(priority_score)) %>%\n  dplyr::transmute(\n    County = COUNTY_NAM,\n    `Vulnerable Tracts`   = n_vulnerable,\n    `Underserved Tracts`  = n_underserved,\n    `% Underserved`       = paste0(round(pct_underserved %||% 0, 1), \"%\"),\n    `Avg Distance (mi)`   = round(mean_dist_miles, 1),\n    `Vulnerable Pop (65+)`= scales::comma(round(vuln_pop_65)),\n    `Priority Score`      = scales::comma(round(priority_score))\n  ) %>%\n  head(10)\n\nknitr::kable(\n  priority_table,\n  caption = \"Top 10 Priority Counties for Healthcare Investment in Pennsylvania\",\n  align = \"lcccccc\"\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: Top 10 Priority Counties for Healthcare Investment in Pennsylvania\n\n|County     | Vulnerable Tracts | Underserved Tracts | % Underserved | Avg Distance (mi) | Vulnerable Pop (65+) | Priority Score |\n|:----------|:-----------------:|:------------------:|:-------------:|:-----------------:|:--------------------:|:--------------:|\n|CLEARFIELD |         4         |         3          |      75%      |       14.7        |        3,384         |     2,538      |\n|PIKE       |         5         |         3          |      60%      |       17.8        |        2,815         |     1,689      |\n|HUNTINGDON |         6         |         2          |     33.3%     |       13.5        |        4,185         |     1,395      |\n|SULLIVAN   |         3         |         3          |     100%      |       21.5        |        1,379         |     1,379      |\n|LANCASTER  |         5         |         1          |      20%      |        9.1        |        6,691         |     1,338      |\n|CAMERON    |         2         |         2          |     100%      |       18.9        |        1,320         |     1,320      |\n|BRADFORD   |         2         |         1          |      50%      |       14.0        |        2,413         |     1,206      |\n|UNION      |         3         |         1          |     33.3%     |        8.0        |        3,565         |     1,188      |\n|DAUPHIN    |         3         |         1          |     33.3%     |       10.7        |        3,181         |     1,060      |\n|MCKEAN     |         5         |         1          |      20%      |       11.1        |        4,449         |      890       |\n\n\n:::\n:::\n\n\n**Requirements:**\n- Use `knitr::kable()` or similar for formatting\n- Include descriptive column names\n- Format numbers appropriately (commas for population, percentages, etc.)\n- Add an informative caption\n- Sort by priority (you decide the metric)\n\n---\n\n## Part 2: Comprehensive Visualization \n\nUsing the skills from Week 3 (Data Visualization), create publication-quality maps and charts.\n\n### Map 1: County-Level Choropleth \n\nCreate a choropleth map showing healthcare access challenges at the county level.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create county-level access map\n\ncounties_map  <- st_transform(counties_summary, 5070)\nhospitals_map <- st_transform(hospitals,       st_crs(counties_map))\n\nggplot() +\n  geom_sf(data = counties_map,\n          aes(fill = pct_underserved),\n          color = \"white\", linewidth = 0.2) +\n  geom_sf(data = hospitals_map,\n          color = \"hotpink\", alpha = 0.6, size = 0.7) +\n  scale_fill_viridis_c(\n    option = \"C\", direction = -1,\n    limits = c(0, 100),\n    labels = label_number(accuracy = 1, suffix = \" %\"),\n    name = \"% underserved (of vulnerable tracts)\",\n    na.value = \"grey85\"\n  ) +\n  labs(\n    title = \"Healthcare Access Challenges in Pennsylvania\",\n    subtitle = \"underserved Counties filled by % of vulnerable tracts (>15 miles)\") +\n  coord_sf() +\n  theme_void(base_size = 12) +\n  theme(\n    legend.position = \"right\",\n    legend.title = element_text(size = 10),\n    legend.text  = element_text(size = 9),\n    plot.title = element_text(face = \"bold\")\n  )\n```\n\n::: {.cell-output-display}\n![](Li_Isabelle_Assignment2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n**Requirements:**\n- Fill counties by percentage of vulnerable tracts that are underserved\n- Include hospital locations as points\n- Use an appropriate color scheme\n- Include clear title, subtitle, and caption\n- Use `theme_void()` or similar clean theme\n- Add a legend with formatted labels\n\n---\n\n### Map 2: Detailed Vulnerability Map \n\nCreate a map highlighting underserved vulnerable tracts.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create detailed tract-level map\n\ntarget_crs <- 5070\ncounties_map   <- st_transform(counties,              target_crs)\nhospitals_map  <- st_transform(hospitals,             target_crs)\ntracts_all_map <- st_transform(tracts_demog,          target_crs)   \nvuln_map       <- st_transform(vulnerable_with_dist,  target_crs)   \n\nunderserved_map <- vuln_map %>% filter(underserved == TRUE)\n\nggplot() +\n  geom_sf(data = tracts_all_map, fill = \"grey90\", color = NA) +\n  geom_sf(data = counties_map, fill = NA, color = \"white\", linewidth = 0.3) +\n  geom_sf(data = hospitals_map, color = \"black\", alpha = 0.6, size = 0.8) +\n  \n  geom_sf(\n    data = underserved_map,\n    aes(fill = \"Underserved vulnerable tract\"),\n    color = \"maroon\", linewidth = 0.25, alpha = 0.85\n  ) +\n  \n  scale_fill_manual(\n    name   = NULL,\n    values = c(\"Underserved vulnerable tract\" = \"#D55E00\")  \n    ) +\n  \n  labs(\n    title    = \"Underserved Vulnerable Census Tracts in Pennsylvania\",\n    subtitle = \"Vulnerable tracts\"\n    ) +\n  coord_sf() +\n  theme_void(base_size = 12) +\n  theme(\n    legend.position = \"right\",\n    plot.title   = element_text(face = \"bold\"),\n    plot.subtitle= element_text(color = \"grey20\")\n  )\n```\n\n::: {.cell-output-display}\n![](Li_Isabelle_Assignment2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n**Requirements:**\n- Show underserved vulnerable tracts in a contrasting color\n- Include county boundaries for context\n- Show hospital locations\n- Use appropriate visual hierarchy (what should stand out?)\n- Include informative title and subtitle\n\n---\n\n### Chart: Distribution Analysis\n\nCreate a visualization showing the distribution of distances to hospitals for vulnerable populations.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create distribution visualization\n\np_hist <- ggplot(vulnerable_with_dist, aes(x = dist_miles)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30, fill = \"#D55E00\", color = \"white\") +\n  geom_density(linewidth = 1, alpha = 0.6) +\n  labs(\n    title = \"Distribution of Distance to Nearest Hospital (Vulnerable Tracts)\",\n    x = \"Distance to nearest hospital (miles)\",\n    y = \"Density\",\n    caption = \"Most tracts are located within 5–10 miles of a hospital, but the distribution is right-skewed, indicating that while access is generally good for the majority, a small number of tracts are much farther away — exceeding 15 miles, and in some extreme cases up to nearly 30 miles.\") +\n  theme_minimal(base_size = 12)\n\np_hist\n```\n\n::: {.cell-output-display}\n![](Li_Isabelle_Assignment2_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n**Suggested chart types:**\n- Histogram or density plot of distances\n- Box plot comparing distances across regions\n- Bar chart of underserved tracts by county\n- Scatter plot of distance vs. vulnerable population size\n\n**Requirements:**\n- Clear axes labels with units\n- Appropriate title\n- Professional formatting\n- Brief interpretation (1-2 sentences as a caption or in text)\n\n---\n\n## Part 3: Bring Your Own Data Analysis \n\nChoose your own additional spatial dataset and conduct a supplementary analysis.\n\n### Challenge Options\n\nChoose ONE of the following challenge exercises, or propose your own research question using OpenDataPhilly data (https://opendataphilly.org/datasets/). \n\n**Note these are just loose suggestions to spark ideas - follow or make your own as the data permits and as your ideas evolve. This analysis should include bringing in your own dataset, ensuring the projection/CRS of your layers align and are appropriate for the analysis (not lat/long or geodetic coordinate systems). The analysis portion should include some combination of spatial and attribute operations to answer a relatively straightforward question**\n\n---\n\n#### Education & Youth Services\n\n**Option A: Educational Desert Analysis**\n- **Data:** Schools, Libraries, Recreation Centers, Census tracts (child population)\n- **Question:** \"Which neighborhoods lack adequate educational infrastructure for children?\"\n- **Operations:** Buffer schools/libraries (0.5 mile walking distance), identify coverage gaps, overlay with child population density\n- **Policy relevance:** School district planning, library placement, after-school program siting\n\n**Option B: School Safety Zones**\n- **Data:** Schools, Crime Incidents, Bike Network\n- **Question:** \"Are school zones safe for walking/biking, or are they crime hotspots?\"\n- **Operations:** Buffer schools (1000ft safety zone), spatial join with crime incidents, assess bike infrastructure coverage\n- **Policy relevance:** Safe Routes to School programs, crossing guard placement\n\n---\n\n#### Environmental Justice\n\n**Option C: Green Space Equity** \n- **Data:** Parks, Street Trees, Census tracts (race/income demographics)\n- **Question:** \"Do low-income and minority neighborhoods have equitable access to green space?\"\n- **Operations:** Buffer parks (10-minute walk = 0.5 mile), calculate tree canopy or park acreage per capita, compare by demographics\n- **Policy relevance:** Climate resilience, environmental justice, urban forestry investment\n---\n\n#### Public Safety & Justice\n\n**Option D: Crime & Community Resources**\n- **Data:** Crime Incidents, Recreation Centers, Libraries, Street Lights\n- **Question:** \"Are high-crime areas underserved by community resources?\"\n- **Operations:** Aggregate crime counts to census tracts or neighborhoods, count community resources per area, spatial correlation analysis\n- **Policy relevance:** Community investment, violence prevention strategies\n---\n\n#### Infrastructure & Services\n\n**Option E: Polling Place Accessibility**\n- **Data:** Polling Places, SEPTA stops, Census tracts (elderly population, disability rates)\n- **Question:** \"Are polling places accessible for elderly and disabled voters?\"\n- **Operations:** Buffer polling places and transit stops, identify vulnerable populations, find areas lacking access\n- **Policy relevance:** Voting rights, election infrastructure, ADA compliance\n\n---\n\n#### Health & Wellness\n\n**Option F: Recreation & Population Health**\n- **Data:** Recreation Centers, Playgrounds, Parks, Census tracts (demographics)\n- **Question:** \"Is lack of recreation access associated with vulnerable populations?\"\n- **Operations:** Calculate recreation facilities per capita by neighborhood, buffer facilities for walking access, overlay with demographic indicators\n- **Policy relevance:** Public health investment, recreation programming, obesity prevention\n\n---\n\n#### Emergency Services\n\n**Option G: EMS Response Coverage**\n- **Data:** Fire Stations, EMS stations, Population density, High-rise buildings\n- **Question:** \"Are population-dense areas adequately covered by emergency services?\"\n- **Operations:** Create service area buffers (5-minute drive = ~2 miles), assess population coverage, identify gaps in high-density areas\n- **Policy relevance:** Emergency preparedness, station siting decisions\n\n---\n\n#### Arts & Culture\n\n**Option H: Cultural Asset Distribution**\n- **Data:** Public Art, Museums, Historic sites/markers, Neighborhoods\n- **Question:** \"Do all neighborhoods have equitable access to cultural amenities?\"\n- **Operations:** Count cultural assets per neighborhood, normalize by population, compare distribution across demographic groups\n- **Policy relevance:** Cultural equity, tourism, quality of life, neighborhood identity\n\n---\n\n### Data Sources\n\n**OpenDataPhilly:** https://opendataphilly.org/datasets/\n- Most datasets available as GeoJSON, Shapefile, or CSV with coordinates\n- Always check the Metadata for a data dictionary of the fields.\n\n**Additional Sources:**\n- **Pennsylvania Open Data:** https://data.pa.gov/\n- **Census Bureau (via tidycensus):** Demographics, economic indicators, commute patterns\n- **TIGER/Line (via tigris):** Geographic boundaries\n\n### Recommended Starting Points\n\n**If you're feeling confident:** Choose an advanced challenge with multiple data layers. \n**If you are a beginner, choose something more manageable that helps you understand the basics**\n\n\n**If you have a different idea:** Propose your own question! Just make sure:\n- You can access the spatial data\n- You can perform at least 2 spatial operations\n\n### Your Analysis\n\n**Your Task:**\n\n1. **Find and load additional data**\n   - Document your data source\n   - Check and standardize the CRS\n   - Provide basic summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load your additional dataset\n\nparks <- st_read(\"data/PPR_Program_Sites.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PPR_Program_Sites' from data source \n  `C:\\Users\\dell\\Documents\\GitHub\\portfolio-setup-Isabelliiii\\assignments\\assignment2\\data\\PPR_Program_Sites.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 171 features and 10 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.2563 ymin: 39.90444 xmax: -74.96944 ymax: 40.12284\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n- What dataset did you choose and why?\n[Dataset chosen: Philadelphia Parks & Recreation Program Sites\nReason for choice:\nThis dataset was selected to analyze green space accessibility and recreation equity in Philadelphia. It represents public parks and recreation facilities which is a key indicator of environmental and community well-being. By examining their spatial distribution relative to neighborhood demographics, we can assess whether low-income communities have equitable access to recreational opportunities.]\n- What is the data source and date?\n[Data were obtained from OpenDataPhilly – PPR Program Sites\n, published and maintained by Philadelphia Parks & Recreation.\nThe dataset was accessed and downloaded in October 2025.]\n- How many features does it contain?\n[- Number of features: 171 program sites\n- Geometry type: Point\n- Coordinate Reference System (CRS): WGS 84 (EPSG:4326)\n- Extent: Longitude -75.2563 to -74.9694, Latitude 39.9044 to 40.1228]\nWhat CRS is it in? Did you need to transform it?\n[The dataset was originally in WGS 84 (geographic coordinates), which is not ideal for distance-based analysis.\nIt was reprojected to EPSG:5070 (NAD83 / Conus Albers) for accurate spatial measurement and buffering operations.]\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nparks <- st_transform(parks, 5070)\n```\n:::\n\n\n2. **Pose a research question**\n\nWrite a clear research statement that your analysis will answer.\n\n**Examples:**\n- \"Do vulnerable tracts have adequate public transit access to hospitals?\"\n- \"Are EMS stations appropriately located near vulnerable populations?\"\n- \"Do areas with low vehicle access have worse hospital access?\"\n\n**Research Question**:\nDo low-income neighborhoods in Philadelphia have less access to parks and recreation facilities compared to higher-income areas?\n\nExplanation:\nThis question investigates whether green space accessibility is distributed equitably across socioeconomic groups in Philadelphia.\nBy analyzing the spatial relationship between parks and recreation sites and census tract median income, this study aims to identify whether environmental and recreational resources are disproportionately concentrated in wealthier neighborhoods which is an important issue for urban equity and public health planning.\n---\n\n3. **Conduct spatial analysis**\n\nUse at least TWO spatial operations to answer your research question.\n\n**Required operations (choose 2+):**\n- Buffers\n- Spatial joins\n- Spatial filtering with predicates\n- Distance calculations\n- Intersections or unions\n- Point-in-polygon aggregation\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(viridis)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Your spatial analysis\n\nphilly_tracts <- get_acs(\n  geography = \"tract\",\n  state     = \"PA\",\n  county    = \"Philadelphia\",\n  variables = c(total_pop = \"B01003_001\", medhhinc = \"B19013_001\"),\n  geometry  = TRUE,\n  output    = \"wide\",\n  year      = 2023,    \n  survey    = \"acs5\"\n) %>%\n  transmute(\n    GEOID,\n    total_pop = total_popE,\n    medhhinc  = medhhincE,\n    geometry\n  )\n\ntarget_crs <- 5070  \n\nparks_5070  <- st_transform(parks,         target_crs)\ntracts_5070 <- st_transform(philly_tracts, target_crs)\n\nparks_buf <- st_buffer(parks_5070, dist = 800)\ntract_cent <- st_centroid(tracts_5070)\n\ntract_access <- tract_cent %>%\n  mutate(has_park_access = lengths(st_intersects(., parks_buf)) > 0) %>%\n  \n  st_drop_geometry() %>%\n  select(GEOID, has_park_access)\n\ntracts_5070 <- tracts_5070 %>%\n  left_join(tract_access, by = \"GEOID\")\n\nparks_in_tract <- st_join(tracts_5070, parks_5070, join = st_contains) %>%\n  st_drop_geometry() %>%\n  count(GEOID, name = \"n_parks\")\n\ntracts_5070 <- tracts_5070 %>%\n  left_join(parks_in_tract, by = \"GEOID\") %>%\n  mutate(n_parks = ifelse(is.na(n_parks), 0L, n_parks))\n\ncity_median_income <- median(tracts_5070$medhhinc, na.rm = TRUE)\n\ntracts_5070 <- tracts_5070 %>%\n  mutate(income_group = ifelse(medhhinc < city_median_income, \"Low income\", \"High income\"))\n\naccess_summary <- tracts_5070 %>%\n  st_drop_geometry() %>%\n  group_by(income_group) %>%\n  summarise(\n    n_tracts     = n(),\n    access_rate  = mean(has_park_access, na.rm = TRUE),\n    mean_parks   = mean(n_parks, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\naccess_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  income_group n_tracts access_rate mean_parks\n  <chr>           <int>       <dbl>      <dbl>\n1 High income       191       0.717       1.06\n2 Low income        190       0.847       1.07\n3 <NA>               27       0.370       1.15\n```\n\n\n:::\n\n```{.r .cell-code}\ncitywide <- tracts_5070 %>%\n  st_drop_geometry() %>%\n  summarise(\n    tracts_with_access    = sum(has_park_access, na.rm = TRUE),\n    tracts_without_access = sum(!has_park_access, na.rm = TRUE),\n    access_rate_city      = mean(has_park_access, na.rm = TRUE)\n  )\n\ncitywide\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  tracts_with_access tracts_without_access access_rate_city\n1                308                   100         0.754902\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = tracts_5070, fill = \"grey92\", color = NA) +\n  geom_sf(data = parks_buf, fill = \"#A7C957\", color = NA, alpha = 0.5) +\n  geom_sf(\n    data = tracts_5070 %>% filter(income_group == \"Low income\", !has_park_access),\n    fill = \"#D55E00\", color = \"white\", linewidth = 0.15, alpha = 0.9\n  ) +\n \n  geom_sf(data = parks_5070, color = \"darkgreen\", size = 0.8, alpha = 0.8) +\n  labs(\n    title = \"Green Space Equity in Philadelphia\",\n    subtitle = \"Low-income census tracts without a park within 0.5 mile (buffers shown in green)\",\n    caption = \"Sources: OpenDataPhilly (PPR Program Sites), 2019–2023 ACS (tidycensus); distances in EPSG:5070\"\n  ) +\n  theme_void(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n    plot.subtitle = element_text(color = \"grey20\")\n  )\n```\n\n::: {.cell-output-display}\n![](Li_Isabelle_Assignment2_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n**Analysis requirements:**\n- Clear code comments explaining each step\n- Appropriate CRS transformations\n- Summary statistics or counts\n- At least one map showing your findings\n- Brief interpretation of results (3-5 sentences)\n\n**Your interpretation:**\n\n[Using a 0.5-mile buffer as a walkable access threshold, low-income tracts exhibit a lower park access rate than high-income tracts, and they also tend to have fewer parks per tract on average.\nThe map highlights clusters of low-income tracts without nearby parks, pointing to potential recreational access gaps.\nThese findings suggest that future park investments and programming should prioritize underserved low-income neighborhoods to improve equitable access to green space and related health benefits.]\n\n\n## Finally - A few comments about your incorporation of feedback!\nTake a few moments to clean up your markdown document and then write a line or two or three about how you may have incorporated feedback that you recieved after your first assignment. \n\n[After receiving feedback on my first assignment, I focused on improving clarity and organization. I combined all library calls into one hidden setup block and removed unnecessary print outputs. I also added clearer explanations and captions so the analysis reads more smoothly and professionally.]\n---\n\n## Submission Requirements\n\n**What to submit:**\n\n1. **Rendered HTML document posted to your course portfolio** with all code, outputs, maps, and text\n   - Use `embed-resources: true` in YAML so it's a single file\n   - All code should run without errors\n   - All maps and charts should display correctly\n\n**File naming:** `LastName_FirstName_Assignment2.html` and `LastName_FirstName_Assignment2.qmd`\n\n---\n\n",
    "supporting": [
      "Li_Isabelle_Assignment2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}